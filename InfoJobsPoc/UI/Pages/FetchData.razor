@page "/fetchdata"
@using InfoJobsPoc.Application.Interfaces.IQuery;
@using InfoJobsPoc.Application.Querys;
@using Microsoft.EntityFrameworkCore;



@inject IQueryApplication<CandidateModelQuery> query

<PageTitle>Lista de candidatos</PageTitle>

<h1>Lista de candidatos</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (candidateQueries == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-light">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Id</th>
                <th scope="col">InsertDate</th>
                <th scope="col">ModifyDate</th>
                <th scope="col">Name</th>
                <th scope="col">Surname</th>
                <th scope="col">Birthdate</th>
                <th scope="col">Email</th>
                <th scope="col">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in candidateQueries)
            {
                <tr>
                    <td>
                        <picture class="text-center">
                            <img class="img-fluid img-thumbnail rounded-1" src="/imgs/batman2.jpg" />
                        </picture>
                    </td>
                    <th scope="row">@item.Id</th>
                    <td>@item.InsertDate</td>
                    <td>@item.ModifyDate</td>
                    <td>@item.Name</td>
                    <td>@item.Surname</td>
                    <td>@item.Birthdate</td>
                    <td>@item.Email</td>
                    <td><span>Edit</span> <span>Remove</span></td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private IEnumerable<CandidateModelQuery> candidateQueries;

    protected override async Task OnInitializedAsync()
    {
        candidateQueries = await query.QueryList().ToListAsync();
    }
}
