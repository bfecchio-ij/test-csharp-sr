// <auto-generated />
using System;
using InfoJobsPoc.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InfoJobsPoc.Infra.Migrations
{
    [DbContext(typeof(PocContextWritte))]
    [Migration("20230108220632_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InfoJobsPoc.Application.Core.Entities.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCandidate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Birthdate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(true)
                        .HasColumnType("varchar")
                        .HasColumnName("Email");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ModifyDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Name");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Surname");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("candidates", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1994, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "loribao@hotmail.com",
                            InsertDate = new DateTime(2023, 1, 8, 19, 6, 32, 77, DateTimeKind.Local).AddTicks(7651),
                            Name = "loribao",
                            Surname = "sanjinez"
                        });
                });

            modelBuilder.Entity("InfoJobsPoc.Application.Core.Entities.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCandidateExperience");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("BeginDate");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Company");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("varchar")
                        .HasColumnName("Description");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<int>("IdCandidate")
                        .HasColumnType("int")
                        .HasColumnName("IdCandidate");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InsertDate");

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Job");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ModifyDate");

                    b.Property<decimal>("Salary")
                        .HasColumnType("numeric(8,2)")
                        .HasColumnName("Salary");

                    b.HasKey("Id")
                        .HasName("IdCandidateExperience");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("IdCandidate");

                    b.ToTable("candidateexperiences", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BeginDate = new DateTime(2023, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Company = "InfoJobs - Pandapé",
                            Description = "Estagiario não remunerado!",
                            IdCandidate = 1,
                            InsertDate = new DateTime(2023, 1, 8, 19, 6, 32, 77, DateTimeKind.Local).AddTicks(7736),
                            Job = "Estagiario",
                            Salary = 10000.59m
                        });
                });

            modelBuilder.Entity("InfoJobsPoc.Application.Core.Entities.Experience", b =>
                {
                    b.HasOne("InfoJobsPoc.Application.Core.Entities.Candidate", "Candidate")
                        .WithMany("Experiences")
                        .HasForeignKey("IdCandidate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("InfoJobsPoc.Application.Core.Entities.Candidate", b =>
                {
                    b.Navigation("Experiences");
                });
#pragma warning restore 612, 618
        }
    }
}
